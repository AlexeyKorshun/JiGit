/*
 *
 *  * Copyright (c) 2018 Rosberry. All rights reserved.
 *
 */

apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.android.library'
apply plugin: "com.squareup.sqldelight"

repositories {
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

sqldelight {
    JigitDatabase {
        packageName = 'com.rosberry.mpp.jigitbl'
    }
}

kotlin {
    targets {
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos")  \
                               ? presets.iosArm64 : presets.iosX64


        fromPreset(iOSTarget, "ios") {
            binaries {
                framework {
                    baseName = "FRAMEWORK"
                }
            }
        }

        fromPreset(presets.android, 'android')
    }

    def ktor = '1.3.0'

    sourceSets {
        commonMain{
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation "io.ktor:ktor-client-core:$ktor"
                implementation "io.ktor:ktor-client-json:$ktor"
                implementation "io.ktor:ktor-client-logging:$ktor"
                implementation "io.ktor:ktor-client-auth:$ktor"
                implementation "io.ktor:ktor-client-serialization:$ktor"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.3"
            }
        }
        androidMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"
                implementation "com.squareup.sqldelight:android-driver:1.2.2"
                api "io.ktor:ktor-client-android:$ktor"
                api "io.ktor:ktor-client-json-jvm:$ktor"
                api "io.ktor:ktor-client-logging-jvm:$ktor"
                api "io.ktor:ktor-client-serialization-jvm:$ktor"
            }
        }
        iosMain {
            dependencies {
                implementation "com.squareup.sqldelight:native-driver:1.2.2"
                api "io.ktor:ktor-client-ios:$ktor"
                api "io.ktor:ktor-client-json-native:$ktor"
                api "io.ktor:ktor-client-logging-native:$ktor"
                api "io.ktor:ktor-client-serialization-native:$ktor"
            }
        }
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 23
    }
}

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

task packForXCode(type: Sync) {
    final File frameworkDir = new File(buildDir, "xcode-frameworks")
    final String mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'

    inputs.property "mode", mode
    dependsOn kotlin.targets.ios.binaries.getFramework(mode).linkTask

    from { kotlin.targets.ios.binaries.getFramework(mode).outputDirectory }
    into frameworkDir

    doLast {
        new File(frameworkDir, 'gradlew').with {
            text = "#!/bin/bash\nexport 'JAVA_HOME=${System.getProperty("java.home")}'\ncd '${rootProject.rootDir}'\n./gradlew \$@\n"
            setExecutable(true)
        }
    }
}

tasks.build.dependsOn packForXCode
